# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy PHP app to Azure Web App - lablink

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        stack: [blade, livewire, livewire-functional, react, vue, api]
        laravel: [10]
        args: ["", --pest]
        include:
          - stack: blade
            laravel: 10

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip
          ini-values: error_reporting=E_ALL
          tools: composer:v2
          coverage: none

      - name: Setup Laravel
        run: |
          composer create-project laravel/laravel:^${{ matrix.laravel }} .
          composer require laravel/breeze:@dev --no-interaction --no-update
          composer config repositories.breeze '{"type": "path", "url": "breeze"}' --file composer.json

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: 'breeze'

      - name: Install Breeze
        run: |
          composer update "laravel/breeze" --prefer-dist --no-interaction --no-progress -W
          php artisan breeze:install ${{ matrix.stack }} ${{ matrix.args }}
          php artisan migrate:fresh --seed

      - name: Install NPM dependencies
        if: matrix.stack != 'api'
        run: npm i

      - name: Compile assets
        if: matrix.stack != 'api'
        run: npm run build

      - name: Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'composer.json'

      - name: Run composer install if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer validate --no-check-publish && composer install --prefer-dist --no-progress

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: php-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: php-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_31F4C3C9419945C786F9C110EC0CB4A5 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_8D399677480349B5ACB26E017A99334D }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_06B4C413E9BB40AAB0E9028A3721A809 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'lablink'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          
